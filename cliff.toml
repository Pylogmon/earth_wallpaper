# configuration file for git-cliff (0.1.0)

[changelog]
# changelog header
header = """
# 更新日志\n
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/ambition-echo/earth_wallpaper/issues/${2}))"},
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = ".*feat.*", group = "新特性"},
    { message = ".*fix.*", group = "Bug 修复"},
    { message = ".*doc.*", group = "文档"},
    { message = ".*perf.*", group = "优化"},
    { message = ".*refactor.*", group = "重构"},
    { message = ".*style.*", group = "代码样式"},
    { message = ".*test.*", group = "测试"},
    { message = ".*build.*", group = "依赖", skip = true},
    { message = ".*ci.*", group = "持续集成", skip = true},
    { message = ".*chore\\(release\\): prepare for", skip = true},
    { message = ".*chore.*", group = "更改构建流程"},
    { body = ".*security.*", group = "安全更新"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = true
# glob pattern for matching git tags
tag_pattern = "[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags chronologically
date_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
